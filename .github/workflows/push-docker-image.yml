---
name: Deploy Docker Image

on:
  repository_dispatch:
    types:
      - scheduled
  pull_request:
    branches:
      - main
      - 85_init_dockerfile # TODO: del after testing
    paths:
      - 'renv/profiles/**/renv.lock'

permissions: write-all 

concurrency:
  group: deploy-docker-image-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  get_renv_list: 
    runs-on: ubuntu-latest
    outputs:
        matrix: ${{ steps.matrix.outputs.value }} 

    steps: 
      - name: Get Updated renv # note: for case schedules job, we update every docker images, and for renv.lock files updates we only update modified renv.lock versions
        id: matrix
        run: |
          renv_tab=()
          for renv_folder in renv/profiles/*; do 
            renv_path="${renv_folder}/renv/renv.lock"
            diff=$(git diff "$renv_path")
            if [[ -z ${diff} | ${{ github.event_name == 'schedule' }} ]]{
              renv_tab+=("\"$renv_path\"")
            }
            fi
          done
          renv_list=( IFS=$', '; echo "${renv_tab[*]}" )
          echo '::set-output name=value::[${renv_list}]'

  deploy-image:
    needs: [ get_renv_list ]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        value: ${{fromJson(needs.get_renv_list.outputs.matrix)}}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Print message
        run: |
          echo "updating docker image for renv ${{ matrix.value }}"

      - name: Set image specs 
        id: image_specs
        run: |
          package_name=$(grep "Package:" DESCRIPTION | awk '{print $NF}')
          r_version=$(basename $(dirname ${{ matrix.value }}))
          echo "r_version=$r_version" >> $GITHUB_OUTPUT 
          echo "image_name=$package_name-$r_version" >> $GITHUB_OUTPUT 

      - name: Call deploy docker image action for every renv
        uses: insightsengineering/r-image-creator@init_action
        with: 
          image-name: "${{ steps.image_specs.outputs.image_name }}" 
          tag-latest: true
          base-image: "rocker/rstudio:${{ steps.image_specs.outputs.r_version }}"
          sysdeps: qpdf,libxt-dev
          renv-lock-file: "${{ matrix.value }}"
          packages: admiraldev,admiral.test